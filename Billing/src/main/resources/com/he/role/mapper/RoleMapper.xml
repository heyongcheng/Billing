<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.role.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.he.role.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, org_id, name, remark, type, parent_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 查询用户权限 -->
  <select id="findUserRole" resultMap="BaseResultMap" parameterType="com.he.role.model.Role">
  	select r.id, r.org_id, r.name,r.remark, r.type, r.parent_id
  	from role r,
  	     user_role ur
  	where r.id = ur.role_id
  	<if test="id != null">
  		and r.id = #{id}
  	</if>
  	<if test="userId != null">
  		and ur.user_id = #{userId}
  	</if>
  	<if test="orgId != null">
  	    and r.org_id = #{orgId}
  	</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.he.role.model.Role" >
    insert into role (id, org_id, name, 
      remark, type, parent_id
      )
    values (#{id,jdbcType=BIGINT}, #{orgId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{parentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.he.role.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.he.role.model.Role" >
    update role
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.he.role.model.Role" >
    update role
    set org_id = #{orgId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>